#!/usr/bin/bash

# This script is meant to be used with i3blocks.
# It uses the "amixer" program to determine volume
# level of the "Master" simple control of a mixer.
# Mixer is either "default" or "pulse".

STEP="5%"
SCONTROL="Master"
MIXER="default"
if command -v pulseaudio >/dev/null 2>&1 && pulseaudio --check;
then
   if amixer -D pulse info >/dev/null 2>&1;
   then
      MIXER="pulse" 
   fi
fi

# In case $BLOCK_BUTTON is empty, this script doesn't change volume settings.
case $BLOCK_BUTTON in
    3) amixer -M -q -D $MIXER sset $SCONTROL toggle ;; # right click, mute/unmute
    4) amixer -M -q -D $MIXER sset $SCONTROL ${STEP}+ unmute ;; # scroll up, increase
    5) amixer -M -q -D $MIXER sset $SCONTROL ${STEP}- unmute ;; # scroll down, decrease
esac

LEVEL=`amixer -M -D $MIXER get $SCONTROL | grep "%\].*dB\]" | sed -E 's/^.*\[([0-9]+)%\].*$/\1/g'`
if [ $LEVEL -gt 100 ];
then
    LEVEL=100
fi

BARS=10
if [ $LEVEL -lt 100 ];
then
    BARS=`expr $LEVEL / 10`
fi

STATE=`amixer -M -D $MIXER get $SCONTROL | grep "%\].*dB\]" | sed -E 's/^.*\[(on|off)\].*$/\1/g'`
if [ $STATE = "off" ]
then
    echo " audio muted" # full_text
    echo " audio muted" # short_text
else
    # full_text
    perl -e "print '♪ '"
    perl -e "print '●' x $BARS";
    perl -e "print '○' x `expr 10 - $BARS`"
    echo

    echo "$LEVEL%" # short_text
fi
